#В общем виде эта конструкция записывается следующим образом:

L = [ a for a in some_iter_obj if cond ]
#Такая запись аналогична следующей:

L = []

for a in some_iter_obj:
    if cond:
        L.append(a)
# Напишем генератор списков, в котором будут храниться квадраты первых 10 натуральных чисел.
#
squares = [i**2 for i in range(1,11)]
#Можно модифицировать этот генератор списков таким образом, что в список будут включаться квадраты только от нечетных чисел.

squares = [i**2 for i in range(1,11) if i % 2 == 1]
#Тип элемента, который будет включаться в список может быть любым. Например, можно составить список из кортежей:

list_tuples = [(i, i**2) for i in range(1,11)]
#А используя вложенные генераторы списков можно создать матрицу «одним махом»:

M = [[i+j for j in range(5)] for i in range(5)]
#При помощи генератора списков создайте таблицу умножения чисел от 1 до 10.
T = [[i*j for j in range(1,11)] for i in range(1,11)]
#Интересный эффект образуется в сочетании использования генераторов списков и функции input(). На каждой итерации цикла консоль будет запрашивать данные для ввода и сохранять их в качестве элемента списка.

L = [input() for i in range(5)]
#Модифицируйте последний пример таким образом, чтобы в список сохранялось True, если элемент четный, и False, если элемент нечетный.
L = [int(input()) % 2 == 0 for i in range(5)]

